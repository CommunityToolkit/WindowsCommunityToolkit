var square44x44Logo = new Windows.Foundation.Uri("ms-appx:///Assets/Square44x44Logo.png");
var square150x150Logo = new Windows.Foundation.Uri("ms-appx:///Assets/Square150x150Logo.png");
var wide310x150Logo = new Windows.Foundation.Uri("ms-appx:///Assets/Wide310x150Logo.png");
var square310x310Logo = new Windows.Foundation.Uri("ms-appx:///Assets/Square310x310Logo.png");

var generateLargeSubgroup = function (day, image, high, low) {
    // generate the normal subgroup
    var subgroup = generateSubgroup(day, image, high, low);

    // allow there to be padding around the image
    (subgroup.children[1]).hintRemoveMargin = null;

    return subgroup;
};

var generateSubgroup = function (day, img, tempHi, tempLo) {
    var adaptativeSubgroup = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup();
    adaptativeSubgroup.hintWeight = 1;

    // Day
    var dayText = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    dayText.text = day;
    dayText.hintAlign = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign.Center;

    // Image
    var adaptativeImage = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage();
    adaptativeImage.source = img;
    adaptativeImage.hintRemoveMargin = true;

    // High temp
    var highTempText = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    highTempText.text = tempHi + "�";
    highTempText.hintAlign = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign.Center;

    // Low temp
    var lowTempText = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    lowTempText.text = tempLo + "�";
    lowTempText.hintAlign = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign.Center;
    lowTempText.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.CaptionSubtle;

    adaptativeSubgroup.children.push(dayText);
    adaptativeSubgroup.children.push(adaptativeImage);
    adaptativeSubgroup.children.push(highTempText);
    adaptativeSubgroup.children.push(lowTempText);

    return adaptativeSubgroup;
};

var generateLegacyToastText = function (day, weatherEmoji, tempHi, tempLo) {
    var adaptativeText = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText.text = `${day} ${weatherEmoji} ${tempHi}� / ${tempLo}�`;
    return adaptativeText;
};

var isAdaptiveToastSupported = function () {
    switch (Windows.System.Profile.AnalyticsInfo.versionInfo.deviceFamily) {
        // desktop and Mobile started supporting adaptive toasts in API contract 3 (Anniversary Update)
        case "Windows.Mobile":
        case "Windows.Desktop":
            return Windows.Foundation.Metadata.ApiInformation.isApiContractPresent("Windows.Foundation.UniversalApiContract", 3);

            // other device families do not support adaptive toasts
        default:
            return false;
    }
};

var generateToastContent = function () {
    // start by constructing the visual portion of the toast
    var binding = new Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric();

    // we'll always have this summary text on our toast notification
    // (it is required that your toast starts with a text element)
    var adaptativeText1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText1.text = "Today will be mostly sunny with a high of 63 and a low of 42.";
    binding.children.push(adaptativeText1);

    // if Adaptive Toast Notifications are supported
    if (isAdaptiveToastSupported()) {
        var adaptativeGroup = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup();

        adaptativeGroup.children.push(generateSubgroup("Mon", "Mostly Cloudy.png", 63, 42));
        adaptativeGroup.children.push(generateSubgroup("Tue", "Cloudy.png", 57, 38));
        adaptativeGroup.children.push(generateSubgroup("Wed", "Sunny.png", 59, 43));
        adaptativeGroup.children.push(generateSubgroup("Thu", "Sunny.png", 62, 42));
        adaptativeGroup.children.push(generateSubgroup("Fri", "Sunny.png", 71, 66));

        // use the rich Tile-like visual layout
        binding.children.push(adaptativeGroup);
    } else {
        var adaptativeText2 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
        adaptativeText2.text = "Monday ? 63� / 42�";

        var adaptativeText3 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
        adaptativeText3.text = "Tuesday ? 57� / 38�"

        // we'll just add two simple lines of text
        binding.children.push(adaptativeText2);
        binding.children.push(adaptativeText3);
    }

    // construct the entire notification
    var toastContent = new Microsoft.Toolkit.Uwp.Notifications.ToastContent();

    toastContent.visual = new Microsoft.Toolkit.Uwp.Notifications.ToastVisual();
    // use our binding from above
    toastContent.visual.bindingGeneric = binding;
    // set the base URI for the images, so we don't redundantly specify the entire path
    toastContent.visual.baseUri = new Windows.Foundation.Uri("ms-appx:///Assets/NotificationAssets/");

    // include launch string so we know what to open when user clicks toast
    toastContent.launch = "action=viewForecast&zip=98008";

    return toastContent;
};

var generateTileBindingSmall = function () {
    var tileBinding = new Microsoft.Toolkit.Uwp.Notifications.TileBinding();

    tileBinding.content = new Microsoft.Toolkit.Uwp.Notifications.TileBindingContentAdaptive();

    tileBinding.content.textStacking = Microsoft.Toolkit.Uwp.Notifications.TileTextStacking.Center;

    var adaptativeText1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText1.text = "Mon";
    adaptativeText1.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.Body;
    adaptativeText1.hintAlign = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign.Center;

    var adaptativeText2 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText2.text = "63�";
    adaptativeText2.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.Base;
    adaptativeText2.hintAlign = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign.Center;

    tileBinding.content.children.push(adaptativeText1);
    tileBinding.content.children.push(adaptativeText2);

    return tileBinding;
};

var generateTileBindingMedium = function () {
    var tileBinding = new Microsoft.Toolkit.Uwp.Notifications.TileBinding();

    tileBinding.content = new Microsoft.Toolkit.Uwp.Notifications.TileBindingContentAdaptive();

    var adaptativeGroup = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup()
    adaptativeGroup.children.push(generateSubgroup("Mon", "Mostly Cloudy.png", 63, 42));
    adaptativeGroup.children.push(generateSubgroup("Tue", "Cloudy.png", 57, 38));

    tileBinding.content.children.push(adaptativeGroup);

    return tileBinding;
};

var generateTileBindingWide = function () {
    var tileBinding = new Microsoft.Toolkit.Uwp.Notifications.TileBinding();

    tileBinding.content = new Microsoft.Toolkit.Uwp.Notifications.TileBindingContentAdaptive();

    var adaptativeGroup = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup();

    adaptativeGroup.children.push(generateSubgroup("Mon", "Mostly Cloudy.png", 63, 42));
    adaptativeGroup.children.push(generateSubgroup("Tue", "Cloudy.png", 57, 38));
    adaptativeGroup.children.push(generateSubgroup("Wed", "Sunny.png", 59, 43));
    adaptativeGroup.children.push(generateSubgroup("Thu", "Sunny.png", 62, 42));
    adaptativeGroup.children.push(generateSubgroup("Fri", "Sunny.png", 71, 66));

    tileBinding.content.children.push(adaptativeGroup);

    return tileBinding;
};

var generateTileBindingLarge = function () {
    var tileBinding = new Microsoft.Toolkit.Uwp.Notifications.TileBinding();

    tileBinding.content = new Microsoft.Toolkit.Uwp.Notifications.TileBindingContentAdaptive();

    // 1. group
    var adaptativeGroup1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup();

    var adaptativeSubgroup1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup();
    adaptativeSubgroup1.hintWeight = 30;

    var adaptativeImage1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage();
    adaptativeImage1.source = "Mostly Cloudy.png";
    adaptativeSubgroup1.children.push(adaptativeImage1);

    var adaptativeSubgroup2 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup();

    var adaptativeText1 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText1.text = "Monday";
    adaptativeText1.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.base;

    var adaptativeText2 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText2.text = "63� / 42�";

    var adaptativeText3 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText3.text = "20% chance of rain";
    adaptativeText3.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.captionSubtle;

    var adaptativeText4 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText();
    adaptativeText4.text = "Winds 5 mph NE";
    adaptativeText4.hintStyle = Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle.captionSubtle;

    adaptativeSubgroup2.children.push(adaptativeText1);
    adaptativeSubgroup2.children.push(adaptativeText2);
    adaptativeSubgroup2.children.push(adaptativeText3);
    adaptativeSubgroup2.children.push(adaptativeText4);

    adaptativeGroup1.children.push(adaptativeSubgroup1);
    adaptativeGroup1.children.push(adaptativeSubgroup2);

    tileBinding.content.children.push(adaptativeGroup1);

    // 2. for spacing
    tileBinding.content.children.push(new Microsoft.Toolkit.Uwp.Notifications.AdaptiveText());

    // 3. group
    var adaptativeGroup2 = new Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup();

    adaptativeGroup2.children.push(generateLargeSubgroup("Tue", "Cloudy.png", 57, 38));
    adaptativeGroup2.children.push(generateLargeSubgroup("Wed", "Sunny.png", 59, 43));
    adaptativeGroup2.children.push(generateLargeSubgroup("Thu", "Sunny.png", 62, 42));
    adaptativeGroup2.children.push(generateLargeSubgroup("Fri", "Sunny.png", 71, 66));

    tileBinding.content.children.push(adaptativeGroup2);

    return tileBinding;
};

var generateTileContent = function () {
    var tileContent = new Microsoft.Toolkit.Uwp.Notifications.TileContent();
    tileContent.visual = new Microsoft.Toolkit.Uwp.Notifications.TileVisual();

    tileContent.visual.tileSmall = generateTileBindingSmall();
    tileContent.visual.tileMedium = generateTileBindingMedium();
    tileContent.visual.tileWide = generateTileBindingWide();
    tileContent.visual.tileLarge = generateTileBindingLarge();

    // set the base URI for the images, so we don't redundantly specify the entire path
    tileContent.visual.baseUri = new Windows.Foundation.Uri("ms-appx:///Assets/NotificationAssets/");

    return tileContent;
};

var pinTile = function () {
    var tile = new Windows.UI.StartScreen.SecondaryTile(new Date().getTime());

    tile.displayName = "WeatherSample";
    tile.arguments = "args";
    tile.visualElements.square150x150Logo = square150x150Logo;
    tile.visualElements.wide310x150Logo = wide310x150Logo;
    tile.visualElements.square310x310Logo = square310x310Logo;
    tile.visualElements.showNameOnSquare150x150Logo = true;
    tile.visualElements.showNameOnSquare310x310Logo = true;
    tile.visualElements.showNameOnWide310x150Logo = true;

    tile.requestCreateAsync()
        .then(function () {
            // generate the tile notification content and update the tile
            var content = generateTileContent();
            var tileNotification = new Windows.UI.Notifications.TileNotification(content.getXml());
            Windows.UI.Notifications.TileUpdateManager.createTileUpdaterForSecondaryTile(tile.TileId).update(tileNotification);
        });
};

var popToast = function () {
    // generate the toast notification content and pop the toast
    var content = generateToastContent();
    var toast = new Windows.UI.Notifications.ToastNotification(content.getXml());
    Windows.UI.Notifications.ToastNotificationManager.createToastNotifier().show(toast);
};