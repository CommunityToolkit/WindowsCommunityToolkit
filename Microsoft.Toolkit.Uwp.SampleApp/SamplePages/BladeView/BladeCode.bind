<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="BladeStyle" TargetType="controls:BladeItem">
            <Setter Property="Header" Value="Default Blade" />
            <Setter Property="Width" Value="400" />
            <Setter Property="IsOpen" Value="True" />
        </Style>
    </Page.Resources>
  
    <Grid>
        <controls:BladeView x:Name="BladeView"
							              Margin="0"
							              Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BladeMode="@[BladeMode:Enum:BladeMode.Normal]"
                            AutoCollapseCountThreshold="@[AutoCollapseCountThreshold:String:4]">
            <controls:BladeItem x:Name="FirstBlade"
								                Header="Test"
								                Style="{StaticResource BladeStyle}"
                                TitleBarVisibility="Collapsed">
                <StackPanel Margin="24">
                    <TextBlock Text="This first blade has a hidden TitleBar, so you can't close it."
                               TextWrapping="WrapWholeWords" />

                    <TextBlock Margin="0,12,0,0"
                               Text="The buttons below toggle more blades on and off. The blades appear in the order that they're opened."
                               TextWrapping="WrapWholeWords" />
                    <ToggleButton Margin="0,24,0,0"
                                  Content="Default Blade"
                                  IsChecked="{Binding IsOpen, Mode=TwoWay, ElementName=SecondBlade}" />
                    <ToggleButton Margin="0,24,0,0"
                                  Content="Custom Titlebar"
                                  IsChecked="{Binding IsOpen, Mode=TwoWay, ElementName=ThirdBlade}" />
                    <ToggleButton Margin="0,24,0,0"
                                  Content="Custom Close Button"
                                  IsChecked="{Binding IsOpen, Mode=TwoWay, ElementName=FourthBlade}" />
                    <Button  x:Name="AddBlade"
							               Margin="0,24,0,0"
                             Content="Add Blade" />
                </StackPanel>
            </controls:BladeItem>
            
            <controls:BladeItem x:Name="SecondBlade" 
                                Header="Default blade"
                                IsOpen="False"
								                Style="{StaticResource BladeStyle}">
                <TextBlock Margin="24"
				                   HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Text="This is a blade with all settings set to default." />
            </controls:BladeItem>
          
            <controls:BladeItem x:Name="ThirdBlade" 
                                Header="Custom title bar"
								                Style="{StaticResource BladeStyle}"
                                IsOpen="False"
                                TitleBarBackground="@[Titlebar Background:Brush:CornflowerBlue]">
              <controls:BladeItem.HeaderTemplate>
                  <DataTemplate>
                      <TextBlock Text="{Binding}" Foreground="White"/>
                  </DataTemplate>
              </controls:BladeItem.HeaderTemplate>
                <TextBlock Margin="24"
						               HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Text="This is a blade with custom titlebar colors." />
            </controls:BladeItem>
            
            <controls:BladeItem x:Name="FourthBlade" 
                                Header="Custom close button color"
								                Style="{StaticResource BladeStyle}"
                                CloseButtonBackground="@[Close Button Background:Brush:CornflowerBlue]"
                                CloseButtonForeground="White"
                                IsOpen="False">
                <TextBlock Margin="24"
						               HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Text="This is a blade with a custom close button color." />
            </controls:BladeItem>
        </controls:BladeView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="BladeView.Padding" Value="12" />
                        <Setter Target="FirstBlade.Width" Value="280" />
                        <Setter Target="FirstBlade.FontSize" Value="12" />
                        <Setter Target="SecondBlade.Width" Value="280" />
                        <Setter Target="SecondBlade.FontSize" Value="12" />
                        <Setter Target="ThirdBlade.Width" Value="280" />
                        <Setter Target="ThirdBlade.FontSize" Value="12" />
                        <Setter Target="FourthBlade.Width" Value="280" />
                        <Setter Target="FourthBlade.FontSize" Value="12" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>