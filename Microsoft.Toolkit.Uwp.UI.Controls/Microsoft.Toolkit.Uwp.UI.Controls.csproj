<Project Sdk="MSBuild.Sdk.Extras">

  <PropertyGroup>
    <TargetFramework>uap10.0.17763</TargetFramework>
    <Title>Windows Community Toolkit Controls</Title>
    <Description>
      This library provides XAML templated controls. It is part of the Windows Community Toolkit.

      Controls:
        - AdaptiveGridView: Presents items in an evenly-spaced set of columns to fill the total available space.
        - BladeView: Provides a horizontal collection of blades for master-detail scenarios.
        - CameraPreview: Easily preview video from camera sources and get realtime frames from the selected source.
        - Carousel: Presents items in a carousel control.
        - ColorPicker/ColorPickerButton: Improved ColorPicker and DropDownButton version.
        - DockPanel: Define areas where you can arrange child elements either horizontally or vertically, relative to each other.
        - DropShadowPanel: DropShadowPanel control allows the creation of a DropShadow for any Xaml FrameworkElement in markup.
        - Expander: Expander allows user to show/hide content based on a boolean state.
        - GridSplitter: A the control that redistributes space between columns or rows of a Grid control.
        - HeaderedContentControl: Provides a header to content.
        - HeaderedItemsControl: Provides a header to items.
        - ImageCropper: ImageCropper control allows user to crop image freely.
        - ImageEx: Images are downloaded asynchronously showing a load indicator and can be stored in a local cache.
        - InAppNotification: Show local notifications in your application.
        - InfiniteCanvas: Supports Infinite Scrolling, Ink, Text, Format Text, Zoom in/out, Redo, Undo, Export &amp; Import.
        - LayoutTransformControl: Support for transformations as if applied by LayoutTransform.
        - Loading: Helps to show content with animation to the user while the app is doing some calculation.
        - MasterDetailsView: Implements the Master/Details design pattern.
        - OrbitView: Positions items in a circle around a center element and supports orbits and anchors.
        - RadialGauge: Displays a value within a range, using a needle on a circular face.
        - RadialProgressBar: Displays progress as a circle getting filled.
        - RangeSelector: "Double slider" control for range values.
        - RemoteDevicePicker: Remote Device Picker Control for Project Rome.
        - RotatorTile: Rotates through a set of items one-by-one like a live-tile.
        - ScrollHeader: A UI control that works as a ListView or GridView header control with quick return, sticky, and fade behavior.
        - StaggeredPanel: Layout of items in a column approach where an item will be added to whichever column has used the least amount of space.
        - TextToolbar: A Toolbar for Editing Text attached to a RichEditBox. It can format RTF, Markdown, or use a Custom Formatter.
        - TileControl: A ContentControl that show an image repeated many times.
        - TokenizingTextBox: An AutoSuggestBox like control which places entered input into easily removed containers for contacts or tags.
        - UniformGrid: Presents items in an evenly-spaced set of rows or columns to fill the total available display space.
        - WrapPanel: Positions child elements in sequential position from left to right and breaks content to the next line.
    </Description>
    <PackageTags>UWP Toolkit Windows Controls XAML Range WrapPanel Adaptive Markdown BladeView Blade CameraPreview Camera Carousel DockPanel DropShadow Expander GridSplitter HeaderedContent ImageEx InAppNotification InfiniteCanvas Master Details MasterDetails Orbit Radial Gauge RadiaGauge RadialProgressBar Scroll ScrollHeader StaggeredPanel Staggered Tile Tokenizing TextBox UniformGrid Uniform Grid</PackageTags>
    <!-- ARM64 builds for managed apps use .NET Native. We can't use the Reflection Provider for that. -->
    <EnableTypeInfoReflection Condition="'$(Configuration)' == 'Debug'">false</EnableTypeInfoReflection>
    <LangVersion>8.0</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Toolkit.Uwp.UI.Animations\Microsoft.Toolkit.Uwp.UI.Animations.csproj" />
    <ProjectReference Include="..\Microsoft.Toolkit.Uwp\Microsoft.Toolkit.Uwp.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="VisualStudioToolsManifest.xml" Pack="true" PackagePath="tools" />
    <None Include="$(OutDir)\Design\$(MSBuildProjectName).Design*.dll;$(OutDir)\Design\$(MSBuildProjectName).Design*.pdb" Pack="true" PackagePath="lib\$(TargetFramework)\Design" />
  </ItemGroup>

  <ItemGroup>
    <PRIResource Include="Strings\en-us\Resources.resw" />
  </ItemGroup>

  <!-- https://weblogs.asp.net/rweigelt/disable-warnings-in-generated-c-files-of-uwp-app -->
  <Target Name="PragmaWarningDisablePrefixer" AfterTargets="MarkupCompilePass2">
    <ItemGroup>
      <GeneratedCSFiles Include="**\*.g.cs;**\*.g.i.cs" />
    </ItemGroup>
    <Message Text="CSFiles: @(GeneratedCSFiles->'&quot;%(Identity)&quot;')" />
    <Exec Command="for %%f in (@(GeneratedCSFiles->'&quot;%(Identity)&quot;')) do echo #pragma warning disable &gt; %%f.temp &amp;&amp; type %%f &gt;&gt; %%f.temp &amp;&amp; move /y %%f.temp %%f &gt; NUL" />
  </Target>
</Project>
