<Project>

  <PropertyGroup>
    <Authors>Microsoft.Toolkit</Authors>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <PackageIconUrl>https://raw.githubusercontent.com/windows-toolkit/WindowsCommunityToolkit/master/build/nuget.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/windows-toolkit/WindowsCommunityToolkit</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/windows-toolkit/WindowsCommunityToolkit/blob/master/license.md</PackageLicenseUrl>
    <PackageReleaseNotes>https://github.com/windows-toolkit/WindowsCommunityToolkit/releases</PackageReleaseNotes>
    <Copyright>(c) .NET Foundation and Contributors.  All rights reserved.</Copyright>
    <DefaultLanguage>en-US</DefaultLanguage>
    <IsDesignProject>$(MSBuildProjectName.Contains('.Design'))</IsDesignProject>
    <IsTestProject>$(MSBuildProjectName.Contains('Test'))</IsTestProject>
    <IsUwpProject Condition="'$(IsDesignProject)' != 'true'">$(MSBuildProjectName.Contains('Uwp'))</IsUwpProject>
    <IsSampleProject>$(MSBuildProjectName.Contains('Sample'))</IsSampleProject>
    <DefaultTargetPlatformVersion>17763</DefaultTargetPlatformVersion>
    <DefaultTargetPlatformMinVersion>16299</DefaultTargetPlatformMinVersion>
    <PackageOutputPath>$(MSBuildThisFileDirectory)bin\nupkg</PackageOutputPath>
  </PropertyGroup>

  <!--
	Uno disable
	<PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
	-->

  <Choose>
    <When Condition="'$(IsTestProject)' != 'true' and '$(IsSampleProject)' != 'true' and '$(IsDesignProject)' != 'true'">
      <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
      </PropertyGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="('$(IsUwpProject)' == 'true') and '$(IsSampleProject)' != 'true' and '$(IsDesignProject)' != 'true'">
      <PropertyGroup>
        <GenerateLibraryLayout>true</GenerateLibraryLayout>
      </PropertyGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="'$(SourceLinkEnabled)' != 'false' and '$(IsSampleProject)' != 'true'">
      <PropertyGroup>
        <!-- Optional: Declare that the Repository URL can be published to NuSpec -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- Optional: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
      </PropertyGroup>
      <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.AzureRepos.Git" Version="1.0.0" PrivateAssets="All"/>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
      </ItemGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="'$(IsDesignProject)' != 'true'">
      <ItemGroup>
        <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive"/>
      </ItemGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="'$(IsTestProject)' != 'true' and '$(IsSampleProject)' != 'true' and '$(IsDesignProject)' != 'true'">
      <ItemGroup>
        <EmbeddedResource Include="**\*.rd.xml" />
        <Page Include="**\*.xaml" Exclude="**\bin\**\*.xaml;**\obj\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
        <Compile Update="**\*.xaml.cs" DependentUpon="%(Filename)" />
      </ItemGroup>
      <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
      </PropertyGroup>
    </When>
  </Choose>

  <PropertyGroup Condition="'$(IsUwpProject)' == 'true'">

    <!-- 8002 is a strong named -> non-strong-named reference -->
    <!-- This is valid for platforms other than .NET Framework (and is needed for the UWP targets -->
    <NoWarn>$(NoWarn);8002</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="!$([MSBuild]::IsOsUnixLike()) and '$(BuildingInsideVisualStudio)'=='' ">
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.1.91" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json">
      <Link>stylecop.json</Link>
    </AdditionalFiles>
  </ItemGroup>

	<!-- BEGIN Uno Specific -->

	<PropertyGroup>
		<TargetFrameworksOverride>uap10.0.16299;MonoAndroid90;xamarinios10;netstandard2.0;xamarinmac20</TargetFrameworksOverride>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0'">
		<DefineConstants>$(DefineConstants);__WASM__</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' or '$(TargetFramework)' == 'MonoAndroid80' or '$(TargetFramework)' == 'xamarinios10' ">
		<NoWarn>$(NoWarn);CS0649;CS0067;CS1998</NoWarn>
	</PropertyGroup>

	<PropertyGroup>		
		<!--https://github.com/xamarin/AndroidSupportComponents/issues/176-->
		<XamarinAndroidSupportSkipVerifyVersions>true</XamarinAndroidSupportSkipVerifyVersions>

		<!-- Workaround for android build using the Uno Source Generators: https://github.com/nventive/Uno.SourceGeneration/issues/109 -->
		<JavaSdkDirectory Condition="'$(JavaSdkDirectory)'=='' and '$(JAVA_HOME_8_X64)'!=''">$(JAVA_HOME_8_X64)</JavaSdkDirectory>
	</PropertyGroup>
	
	<!-- END Uno Specific -->

</Project>