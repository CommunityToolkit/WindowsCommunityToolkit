// Initialize the service
if (!MicrosoftGraphService.Instance.Initialize(ClientId.Text))
{
    return;
}
// Sign in with a Office 365 account
if (!await MicrosoftGraphService.Instance.LoginAsync())
{
    return;
}

//Send a message
string[] toRecipients = { "user1@contoso.com", "user2@contoso.com" };
string subject = "This is the subject of my message";
string content = "This is the content of my message";

await MicrosoftGraphService.Instance.User.Message.SendEmailAsync(subject, content, BodyType.Text, toRecipients);

// You can also send a message in html format
string content = "Hello <b>World</b>";
await MicrosoftGraphService.Instance.User.Message.SendEmailAsync(subject, content, BodyType.Html, toRecipients);

// Retrieve user's info from Azure Active Directory
var user = await MicrosoftGraphService.Instance.User.GetProfileAsync();
UserPanel.DataContext = user;

// You can also select any fields you want in the response
MicrosoftGraphUserFields[] selectedFields = 
	{
		MicrosoftGraphUserFields.Id,
		MicrosoftGraphUserFields.DisplayName,
		MicrosoftGraphUserFields.JobTitle,
		MicrosoftGraphUserFields.Mail,
		MicrosoftGraphUserFields.Department,
		MicrosoftGraphUserFields.PreferredLanguage
	};

var user = await MicrosoftGraphService.Instance.User.GetProfileAsync(selectedFields);
UserPanel.DataContext = user;     

// Retrieve the user's photo 
using (IRandomAccessStream photoStream = await MicrosoftGraphService.Instance.User.GetPhotoAsync())
{
   BitmapImage photo = new BitmapImage();
   if (photoStream != null)
    {
        await photo.SetSourceAsync(photoStream);
    }
   else
    {
        photo.UriSource = new Uri("ms-appx:///SamplePages/MicrosoftGraph Service/user.png");
    }

    this.Photo.Source = photo;
}

// Get the top 10 messages
messages = await MicrosoftGraphService.Instance.User.Message.GetEmailsAsync(10);
MessagesList.ItemsSource = messages;

// You can also select any fields you want in the response
MicrosoftGraphMessageFields[] selectedFields = 
{ 
	MicrosoftGraphMessageFields.Id,
	MicrosoftGraphMessageFields.From,
	MicrosoftGraphMessageFields.Subject,
	MicrosoftGraphMessageFields.BodyPreview
};

messages = await MicrosoftGraphService.Instance.User.Message.GetEmailsAsync(10,selectedFields);
MessagesList.ItemsSource = messages;

// Request the next 10 messages 
messages = await MicrosoftGraphService.Instance.User.Message.NextPageEmailsAsync();
if (messages == null)
{
	// no more messages
}

// Get the top 10 events
events = await MicrosoftGraphService.Instance.User.Event.GetEventsAsync(10);
EventsList.ItemsSource = events;

// You can also select any fields you want in the response
MicrosoftGraphEventFields[] selectedFields = 
{ 
	MicrosoftGraphEventFields.Id,
	MicrosoftGraphEventFields.Attendees,
	MicrosoftGraphEventFields.Start,
	MicrosoftGraphEventFields.HasAttachments,
	MicrosoftGraphEventFields.Subject,
	MicrosoftGraphEventFields.BodyPreview
};

events = await MicrosoftGraphService.Instance.User.Event.GetEventsAsync(10,selectedFields);
EventsList.ItemsSource = events;

// Request the next 10 events 
events = await MicrosoftGraphService.Instance.User.Event.NextPageEventsAsync();
if (events == null)
{
	// no more events
}